{"version":3,"sources":["components/TipoTempo.js","helpers.js","components/Cromometro.js","components/Controles.js","components/AtalhosTeclado.js","components/AvisoSonoro.js","components/Tarefas/VerTarefas/index.js","components/Tarefas/ListaTarefa/context.js","components/Tarefas/Tarefa/index.js","components/Tarefas/ListaTarefa/index.js","main/Pomodoro.js","index.js"],"names":["memo","_ref","types","changeType","selected","react_default","a","createElement","className","map","type","index","key","name","onClick","pad2","num","concat","formatTime","time","minutes","Math","floor","seconds","Cronometro","status","progress","document","title","circumference","normalizedRadius","PI","strokeDashoffset","width","viewBox","radius","stroke","fill","strokeWidth","r","cx","cy","strokeDasharray","style","start","reset","pause","sound","toggleSound","tarefa","painelTarefa","createContext","Tarefa","task","ref","useRef","_useContext","useContext","TaskContext","move","handleStatus","_useDrag","useDrag","item","id","collect","monitor","isDragging","_useDrag2","Object","slicedToArray","dragRef","_useDrop","useDrop","accept","hover","dragged","target","targetSize","current","getBoundingClientRect","targetCenter","bottom","top","draggedTop","getClientOffset","y","order","dropRef","closed","selectedTaskType","_useState","useState","_useState2","input","setInput","taskStatus","value","_useState3","JSON","parse","window","localStorage","getItem","_useState4","tasks","setTasks","_useState5","_useState6","selectedStatus","setSelectedStatus","useEffect","setItem","stringify","context","Provider","from","to","produce","draft","taskMoved","splice","console","log","foundIndex","findIndex","src_components_TipoTempo","onChange","e","placeholder","push","length","removeItem","location","reload","filter","Pomodoro","props","_this","classCallCheck","this","_super","call","sprint","sprintTotal","handleKeyUp","event","tagName","pauseTimer","resetTimer","setState","selectedType","running","tick","state","stopInterval","play","navigator","serviceWorker","register","then","sw","showNotification","clearInterval","interval","startTimer","setInterval","currentTime","getStatus","_this$state","getProgress","total","handleToggleSound","handleToggleTask","addEventListener","Notification","requestPermission","Audio","preload","removeEventListener","_this$state2","Cromometro","components_Controles","Tarefas_VerTarefas","src_components_AtalhosTeclado","src_components_AvisoSonoro","Tarefas_ListaTarefa","Component","defaultProps","ReactDOM","render","DndProvider","backend","HTML5Backend","src_main_Pomodoro","getElementById"],"mappings":"sZAiBeA,wBAdG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,WAAYC,EAAtBH,EAAsBG,SAAtB,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZN,EAAMO,IAAI,SAACC,EAAMC,GAAP,OACTN,EAAAC,EAAAC,cAAA,UACEK,IAAKF,EAAKG,KACVC,QAAS,kBAAMX,EAAWO,IAC1BF,UAAWE,EAAKG,OAAST,EAASS,KAAO,SAAW,IAEnDH,EAAKG,YCXd,SAASE,EAAKC,GACZ,OAAOA,EAAM,EAAIA,EAAV,IAAAC,OAAoBD,GAGtB,SAASE,EAAWC,GACzB,IAAMC,EAAUL,EAAKM,KAAKC,MAAMH,EAAO,KACjCI,EAAUR,EAAKM,KAAKC,MAAMH,EAAO,KAEvC,SAAAF,OAAUG,EAAV,KAAAH,OAAqBM,aCmCRC,EAvCI,SAAAvB,GAAgC,IAA7BkB,EAA6BlB,EAA7BkB,KAAMM,EAAuBxB,EAAvBwB,OAAQC,EAAezB,EAAfyB,SAClCC,SAASC,MAAT,IAAAX,OAAqBC,EAAWC,GAAhC,kCAEA,IAGMU,EAAgBC,IAAuBT,KAAKU,GAC5CC,EAAmBH,EAAiBH,EAAW,IAAOG,EAE5D,OACExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAK0B,MAAM,OAAOC,QAAO,OAAAjB,OAASkB,IAAT,KAAAlB,OAAuBkB,MAC9C9B,EAAAC,EAAAC,cAAA,UACE6B,OAAO,OACPC,KAAK,OACLC,YAXO,EAYPC,EAXiBJ,GAYjBK,GAdO,IAePC,GAfO,MAiBTpC,EAAAC,EAAAC,cAAA,UACE6B,OAAO,OACPC,KAAK,cACLC,YAnBO,EAoBPI,gBAAiBb,EAAgB,IAAMA,EACvCc,MAAO,CAAEX,oBACTO,EArBiBJ,GAsBjBK,GAxBO,IAyBPC,GAzBO,OA4BXpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKW,EAAWC,IAChBd,EAAAC,EAAAC,cAAA,SAAIkB,MCJGzB,wBA9BE,SAAAC,GAAA,IAAG2C,EAAH3C,EAAG2C,MAAOC,EAAV5C,EAAU4C,MAAOC,EAAjB7C,EAAiB6C,MAAOrB,EAAxBxB,EAAwBwB,OAAxB,OACfpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXiB,GACApB,EAAAC,EAAAC,cAAA,UAAQO,QAAS8B,EAAOpC,UAAU,UAAlC,WAKU,eAAXiB,GACCpB,EAAAC,EAAAC,cAAA,UAAQO,QAAS8B,EAAOpC,UAAU,UAAlC,cAKW,YAAXiB,GAAmC,UAAXA,IACxBpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQO,QAAS+B,EAAOrC,UAAU,aAAlC,YAGAH,EAAAC,EAAAC,cAAA,UACEO,QAASgC,EACTtC,UAAsB,YAAXiB,EAAuB,YAAc,SAEpC,YAAXA,EAAuB,YAAc,eCejCzB,wBAtCQ,kBACrBK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBCrBKP,wBAVK,SAAAC,GAAA,IAAG8C,EAAH9C,EAAG8C,MAAOC,EAAV/C,EAAU+C,YAAV,OAClB3C,EAAAC,EAAAC,cAAA,UACEC,UAAS,eAAAS,OAAiB8B,GAAS,UACnCjC,QAASkC,EACTpB,MAAOmB,EAAQ,2BAA6B,0BAE5C1C,EAAAC,EAAAC,cAAA,KAAGC,UAAS,gBAAAS,OAAkB8B,EAAQ,KAAO,cCIlC/C,wBAVI,SAAAC,GAAA,IAAGgD,EAAHhD,EAAGgD,OAAQC,EAAXjD,EAAWiD,aAAX,OACjB7C,EAAAC,EAAAC,cAAA,UACEC,UAAS,iBAAAS,OAAmBgC,GAAU,UACtCnC,QAASoC,EACTtB,MAAOqB,EAAS,gCAAkC,+BAElD5C,EAAAC,EAAAC,cAAA,KAAGC,UAAW,mCCPH2C,0BAAc,0BCId,SAASC,EAATnD,GAAiC,IAAfoD,EAAepD,EAAfoD,KAAM1C,EAASV,EAATU,MAC/B2C,EAAMC,mBADkCC,EAEfC,qBAAWC,GAAlCC,EAFsCH,EAEtCG,KAAMC,EAFgCJ,EAEhCI,aAFgCC,EAGZC,YAAQ,CACxCC,KAAM,CAAErD,KAAM,SAAUsD,GAAIX,EAAKW,GAAIrD,SACrCsD,QAAS,SAAAC,GAAO,MAAK,CACnBC,WAAYD,EAAQC,iBANsBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GAGrCM,EAHqCC,EAAA,GAGrCD,WAAcI,EAHuBH,EAAA,GAAAI,EAU1BC,YAAQ,CAC1BC,OAAQ,SACRC,MAF0B,SAEpBZ,EAAMG,GACV,GAAIH,EAAKC,KAAOX,EAAKW,GAArB,CACA,IAAMY,EAAUb,EACVc,EAASxB,EACTyB,EAAaxB,EAAIyB,QAAQC,wBACzBC,GAAgBH,EAAWI,OAASJ,EAAWK,KAAO,EAEtDC,EADgBlB,EAAQmB,kBACGC,EAAIR,EAAWK,IAE5CP,EAAQW,MAAQV,EAAOU,OAASH,EAAaH,GAC7CL,EAAQW,MAAQV,EAAOU,OAASH,EAAaH,IAEjDtB,EAAKI,EAAKpD,MAAOA,GACjBoD,EAAKpD,MAAQA,OAMjB,OAFA4D,GAAQiB,EA7BsCnB,OAAAC,EAAA,EAAAD,CAAAG,EAAA,OA6B9BlB,IAGdjD,EAAAC,EAAAC,cAAA,OAAK+C,IAAKA,EAAK9C,UAAW2D,EAAa,kBAAoB,UACzD9D,EAAAC,EAAAC,cAAA,WAAM8C,EAAKzB,OACXvB,EAAAC,EAAAC,cAAA,QAAMO,QAAS,kBAAM8C,EAAaP,KAC/BA,EAAKoC,OAAS,QAAU,wBCsDlBzF,iBAvFK,SAAAC,GAA0BA,EAAvByF,iBAAuB,IAAAC,EAClBC,mBAAS,IADSC,EAAAxB,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GACrCG,EADqCD,EAAA,GAC9BE,EAD8BF,EAAA,GAEtCG,EAAa,CACjB,CAAEnF,KAAM,QAASoF,OAAQ,GACzB,CAAEpF,KAAM,UAAWoF,OAAO,GAC1B,CAAEpF,KAAM,cAAeoF,OAAO,IALYC,EAQlBN,mBACxBO,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,0BAA4B,IATzBC,EAAAnC,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GAQrCO,EARqCD,EAAA,GAQ9BE,EAR8BF,EAAA,GAAAG,EAWAf,mBAASI,EAAW,IAXpBY,EAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAA,GAWrCE,EAXqCD,EAAA,GAWrBE,EAXqBF,EAAA,GAmD5C,OAtCAG,oBAAU,WACRV,OAAOC,aAAaU,QAAQ,uBAAwBb,KAAKc,UAAUR,KAClE,CAACA,IAqCFpG,EAAAC,EAAAC,cAAC2G,EAAYC,SAAb,CAAsBlB,MAAO,CAAEQ,QAAO9C,KAnCxC,SAAcyD,EAAMC,GAClBX,EACEY,YAAQb,EAAO,SAAAc,GACb,IAAMC,EAAYD,EAAMH,GACxBG,EAAME,OAAOL,EAAM,GACnBG,EAAME,OAAOJ,EAAI,EAAGG,OA8BoB5D,aAzB9C,SAAsBP,GACpBqE,QAAQC,IAAI,QAAStE,GACrBqD,EACEY,YAAQb,EAAO,SAAAc,GACb,IAAMK,EAAaL,EAAMM,UAAU,SAAA9D,GAAI,OAAIA,EAAKC,KAAOX,EAAKW,KAC5DuD,EAAMK,GAAYnC,QAAU8B,EAAMK,GAAYnC,aAqBhDpF,EAAAC,EAAAC,cAACuH,EAAD,CACE5H,MAAO8F,EACP5F,SAAUyG,EACV1G,WAAY2G,IAEdzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SACE0F,MAAOH,EACPiC,SAAU,SAAAC,GAAC,OAAIjC,EAASiC,EAAEnD,OAAOoB,QACjCgC,YAAY,mBAEd5H,EAAAC,EAAAC,cAAA,QAAMO,QA3BZ,WACE4F,EACEY,YAAQb,EAAO,SAAAc,GACbA,EAAMW,KAAK,CAAElE,GAAIuD,EAAMY,OAAS,EAAGvG,MAAOkE,EAAOL,QAAQ,OAG7DM,EAAS,MAqBoB,SAAe1F,EAAAC,EAAAC,cAAA,QAAMO,QAlBpD,WACEwF,aAAa8B,WAAW,wBACxB/B,OAAOgC,SAASC,WAgBuD,WAErEjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZiG,EAAM0B,OAAS,EACd1B,EACG8B,OACC,SAAAlF,GAAI,OACFA,EAAKoC,SAAWoB,EAAeZ,QACL,IAA1BY,EAAeZ,QAElBxF,IAAI,SAAC4C,EAAM1C,GAAP,OACHN,EAAAC,EAAAC,cAAC6C,EAAD,CAAQxC,IAAKyC,EAAKW,GAAIrD,MAAOA,EAAO0C,KAAMA,MAG9ChD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,oBC7ENgI,2DACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAArE,OAAAsE,EAAA,EAAAtE,CAAAuE,KAAAJ,IACjBE,EAAAG,EAAAC,KAAAF,KAAMH,IAsBRM,OAAS,EAvBUL,EAwBnBM,YAAc,EAxBKN,EAqCnBO,YAAc,SAAAC,GACiB,UAAzBA,EAAMrE,OAAOsE,UACC,MAAdD,EAAMtI,IACR8H,EAAKU,aACkB,WAAdF,EAAMtI,IACf8H,EAAKW,aACIH,EAAMtI,KAAO,GAAKsI,EAAMtI,KAAO8H,EAAKD,MAAMvI,MAAMiI,QACzDO,EAAKvI,WAAWuI,EAAKD,MAAMvI,MAAMgJ,EAAMtI,IAAM,MA5C9B8H,EAgDnBvI,WAAa,SAAAO,GACXgI,EAAKW,aACLX,EAAKY,SAAS,CAAEC,aAAc7I,EAAMS,KAAMT,EAAKS,KAAMqI,SAAS,KAlD7Cd,EAqDnBe,KAAO,WACL,GAAIf,EAAKgB,MAAMvI,MAAQ,EAAG,CACxBuH,EAAKiB,eACLjB,EAAKY,SAAS,CAAEE,SAAS,IAEY,oBAAjCd,EAAKgB,MAAMH,aAAa1I,MAC1B6H,EAAKvI,WAAWuI,EAAKD,MAAMvI,MAAM,IACjCwI,EAAKK,OAASL,EAAKK,OAAS,EAC5BL,EAAKM,YAAcN,EAAKM,YAAc,GAED,oBAAjCN,EAAKgB,MAAMH,aAAa1I,MAC1B6H,EAAKvI,WAAWuI,EAAKD,MAAMvI,MAAM,IACjCwI,EAAKK,OAASL,EAAKK,OAAS,GAES,oBAAjCL,EAAKgB,MAAMH,aAAa1I,OAC1B6H,EAAKvI,WAAWuI,EAAKD,MAAMvI,MAAM,IACjCwI,EAAKK,OAAS,GAKhBL,EAAKK,QAAU,IACjBL,EAAKvI,WAAWuI,EAAKD,MAAMvI,MAAM,IACjCwI,EAAKK,OAAS,GAGZL,EAAKgB,MAAM3G,OAAO2F,EAAK3F,MAAM6G,OACjC,IACEC,UAAUC,cAAcC,SAAS,qBAAqBC,KAAK,SAAAC,GACzDA,EAAGC,iBAAH,wCAAAjJ,OAA4DyH,EAAKgB,MAAMH,aAAa1I,SAEtF,MAAOmH,GACPN,QAAQC,IAAI,4BAAuBK,IAGvCU,EAAKY,SAAS,SAAAI,GAAK,MAAK,CAAEvI,KAAMuI,EAAMvI,KAAO,MAxF5BuH,EA2FnBiB,aAAe,WACbQ,cAAczB,EAAKgB,MAAMU,UACzB1B,EAAKY,SAAS,CAAEc,SAAU,QA7FT1B,EAgGnB2B,WAAa,WACX3B,EAAKY,SAAS,SAAAI,GAAK,MAAK,CACtBF,SAAS,EACTY,SAAUE,YAAY5B,EAAKe,KAAM,KACjCtI,KAAMuI,EAAMvI,KAAO,EAAIuI,EAAMvI,KAAOuI,EAAMH,aAAapI,QAEzDuH,EAAK3F,MAAMD,QACX4F,EAAK3F,MAAMwH,YAAc,GAvGR7B,EA0GnBW,WAAa,WACXX,EAAKiB,eACLjB,EAAKY,SAAS,SAAAI,GAAK,MAAK,CACtBvI,KAAMuI,EAAMH,aAAapI,KACzBqI,SAAS,MA9GMd,EAkHnBU,WAAa,WACXV,EAAKgB,MAAMU,SAAW1B,EAAKiB,eAAiBjB,EAAK2B,cAnHhC3B,EAsHnB8B,UAAY,WAAM,IAAAC,EACoB/B,EAAKgB,MAAjCvI,EADQsJ,EACRtJ,KAAMqI,EADEiB,EACFjB,QAASY,EADPK,EACOL,SACvB,OAAa,IAATjJ,EAAmB,aACnBqI,IAAYY,EAAiB,UAC7BZ,EAAgB,aAApB,GA1HiBd,EA6HnBgC,YAAc,WACZ,IAAM3F,EAAU2D,EAAKgB,MAAMvI,KACrBwJ,EAAQjC,EAAKgB,MAAMH,aAAapI,KACtC,OAASwJ,EAAQ5F,GAAW4F,EAAS,KAhIpBjC,EAmInBkC,kBAAoB,WAClBlC,EAAKY,SACH,SAAAI,GAAK,MAAK,CACR3G,OAAQ2G,EAAM3G,QAEhB,WACEsD,OAAOC,aAAaU,QAAQ,uBAAwB0B,EAAKgB,MAAM3G,UAzIlD2F,EA8InBmC,iBAAmB,WACjBnC,EAAKY,SACH,SAAAI,GAAK,MAAK,CACR1D,YAAa0D,EAAM1D,aAErB,WACEK,OAAOC,aAAaU,QAClB,4BACA0B,EAAKgB,MAAM1D,eApJjB0C,EAAKgB,MAAQ,CACXH,aAAcd,EAAMvI,MAAM,GAC1BiB,KAAMsH,EAAMvI,MAAM,GAAGiB,KACrBiJ,SAAU,KACVZ,SAAS,EACTzG,MACEoD,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,2BAA4B,EACrEP,WACEG,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,+BACvC,MAXamC,kEA2BjB/G,SAASmJ,iBAAiB,QAASlC,KAAKK,aACxC8B,aAAaC,oBACbpC,KAAK7F,MAAQ,IAAIkI,MAAM,aACvBrC,KAAK7F,MAAMmI,QAAU,sDAIrBvJ,SAASwJ,oBAAoB,QAASvC,KAAKK,8CA0HpC,IAAAmC,EAC2CxC,KAAKc,MAA/CvI,EADDiK,EACCjK,KAAMoI,EADP6B,EACO7B,aAAcxG,EADrBqI,EACqBrI,MAAOiD,EAD5BoF,EAC4BpF,WAC3B9F,EAAU0I,KAAKH,MAAfvI,MAER,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAC8K,EAAD,CACElK,KAAMA,EACNM,OAAQmH,KAAK4B,YACb9I,SAAUkH,KAAK8B,gBAEjBrK,EAAAC,EAAAC,cAAA,qBAAaqI,KAAKI,aAClB3I,EAAAC,EAAAC,cAAC+K,EAAD,CACE1I,MAAOgG,KAAKyB,WACZxH,MAAO+F,KAAKS,WACZvG,MAAO8F,KAAKQ,WACZ3H,OAAQmH,KAAK4B,cAEfnK,EAAAC,EAAAC,cAACuH,EAAD,CACE5H,MAAOA,EACPE,SAAUmJ,EACVpJ,WAAYyI,KAAKzI,aAEnBE,EAAAC,EAAAC,cAACgL,EAAD,CAAYtI,OAAQ+C,EAAY9C,aAAc0F,KAAKiC,mBACnDxK,EAAAC,EAAAC,cAACiL,EAAD,MACAnL,EAAAC,EAAAC,cAACkL,EAAD,CAAa1I,MAAOA,EAAOC,YAAa4F,KAAKgC,qBAE9C5E,GACC3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACmL,EAAD,eA5LWC,cAAjBnD,EAgBGoD,aAAe,CACpB1L,MAAO,CACL,CAAE8D,GAAI,EAAGnD,KAAM,kBAAmBM,KAAM,MACxC,CAAE6C,GAAI,EAAGnD,KAAM,kBAAmBM,KAAM,KACxC,CAAE6C,GAAI,EAAGnD,KAAM,kBAAmBM,KAAM,OAgL/BqH,QCxMfqD,IAASC,OACPzL,EAAAC,EAAAC,cAACwL,EAAA,EAAD,CAAaC,QAASC,KACpB5L,EAAAC,EAAAC,cAAC2L,EAAD,OAEFvK,SAASwK,eAAe","file":"static/js/main.f8a23733.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './TipoTempo.css';\n\nconst TipoTempo = ({ types, changeType, selected }) => (\n  <div className=\"TipoTempo\">\n    {types.map((type, index) => (\n      <button\n        key={type.name}\n        onClick={() => changeType(type)}\n        className={type.name === selected.name ? 'active' : ''}\n      >\n        {type.name}\n      </button>\n    ))}\n  </div>\n);\n\nexport default memo(TipoTempo);\n","function pad2(num) {\n  return num > 9 ? num : `0${num}`;\n}\n\nexport function formatTime(time) {\n  const minutes = pad2(Math.floor(time / 60));\n  const seconds = pad2(Math.floor(time % 60));\n\n  return `${minutes}:${seconds}`;\n}\n","import React from 'react';\nimport { formatTime } from '../helpers';\nimport './Cronometro.css';\n\nconst Cronometro = ({ time, status, progress }) => {\n  document.title = `(${formatTime(time)}) Pomodoro Sprint - Front Data`;\n\n  const radius = 100;\n  const stroke = 5;\n  const normalizedRadius = radius - stroke * 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  return (\n    <div className=\"Cronometro\">\n      <svg width=\"100%\" viewBox={`0 0 ${radius * 2} ${radius * 2}`}>\n        <circle\n          stroke=\"cyan\"\n          fill=\"#333\"\n          strokeWidth={stroke}\n          r={normalizedRadius}\n          cx={radius}\n          cy={radius}\n        />\n        <circle\n          stroke=\"gray\"\n          fill=\"transparent\"\n          strokeWidth={stroke}\n          strokeDasharray={circumference + ' ' + circumference}\n          style={{ strokeDashoffset }}\n          r={normalizedRadius}\n          cx={radius}\n          cy={radius}\n        />\n      </svg>\n      <div>\n        <h1>{formatTime(time)}</h1>\n        <p>{status}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Cronometro;\n","import React, { memo } from 'react';\nimport './Controles.css';\n\nconst Controls = ({ start, reset, pause, status }) => (\n  <div className=\"Controles\">\n    {!status && (\n      <button onClick={start} className=\"inicio\">\n        Iniciar\n      </button>\n    )}\n\n    {status === 'Finalizado' && (\n      <button onClick={start} className=\"inicio\">\n        Reiniciar\n      </button>\n    )}\n\n    {(status === 'Pausado' || status === 'Tempo') && (\n      <div>\n        <button onClick={reset} className=\"reiniciar\">\n          Desligar\n        </button>\n        <button\n          onClick={pause}\n          className={status === 'Pausado' ? 'continuar' : 'pausa'}\n        >\n          {status === 'Pausado' ? 'Continuar' : 'Pausar'}\n        </button>\n      </div>\n    )}\n  </div>\n);\n\nexport default memo(Controls);\n","import React, { memo } from 'react';\nimport './AtalhosTeclado.css';\n\nconst AtalhosTeclado = () => (\n  <div className=\"AtalhosTeclado\">\n    <i className=\"far fa-keyboard\" />\n    <div className=\"AtalhosTeclado-box\">\n      <div className=\"AtalhoTeclado\">\n        <div>Play / Pause / Resume</div>\n        <div>\n          <kbd>Space</kbd>\n        </div>\n      </div>\n      <div className=\"AtalhoTeclado\">\n        <div>Reiniciar</div>\n        <div>\n          <kbd>Esc</kbd>\n        </div>\n      </div>\n      <div className=\"AtalhoTeclado\">\n        <div>Iniciar sprint</div>\n        <div>\n          <kbd>1</kbd>\n        </div>\n      </div>\n      <div className=\"AtalhoTeclado\">\n        <div>Iniciar intervalo curto</div>\n        <div>\n          <kbd>2</kbd>\n        </div>\n      </div>\n      <div className=\"AtalhoTeclado\">\n        <div>Iniciar intervalo longo</div>\n        <div>\n          <kbd>3</kbd>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default memo(AtalhosTeclado);\n","import React, { memo } from 'react';\nimport './AvisoSonoro.css';\n\nconst AvisoSonoro = ({ sound, toggleSound }) => (\n  <button\n    className={`AvisoSonoro ${sound && 'active'}`}\n    onClick={toggleSound}\n    title={sound ? 'Desabilitar aviso sonoro' : 'Habilitar aviso sonoro'}\n  >\n    <i className={`fa fa-volume-${sound ? 'up' : 'mute'}`} />\n  </button>\n);\n\nexport default memo(AvisoSonoro);\n","import React, { memo } from 'react';\nimport './styles.css';\n\nconst VerTarefas = ({ tarefa, painelTarefa }) => (\n  <button\n    className={`PainelTarefas ${tarefa && 'active'}`}\n    onClick={painelTarefa}\n    title={tarefa ? 'Desabilitar painel de tarefas' : 'Habilitar painel de tarefas'}\n  >\n    <i className={'fa fa-tasks'} />\n  </button>\n);\n\nexport default memo(VerTarefas);\n","import { createContext } from 'react';\n\nexport default createContext({});\n","import React, { useRef, useContext } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport './styles.css';\n\nimport TaskContext from '../ListaTarefa/context';\n\nexport default function Tarefa({ task, index }) {\n  const ref = useRef();\n  const { move, handleStatus } = useContext(TaskContext);\n  const [{ isDragging }, dragRef] = useDrag({\n    item: { type: 'TAREFA', id: task.id, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const [, dropRef] = useDrop({\n    accept: 'TAREFA',\n    hover(item, monitor) {\n      if (item.id === task.id) return;\n      const dragged = item;\n      const target = task;\n      const targetSize = ref.current.getBoundingClientRect();\n      const targetCenter = (targetSize.bottom - targetSize.top) / 2;\n      const draggedOffset = monitor.getClientOffset();\n      const draggedTop = draggedOffset.y - targetSize.top;\n\n      if (dragged.order < target.order && draggedTop < targetCenter) return;\n      if (dragged.order > target.order && draggedTop > targetCenter) return;\n\n      move(item.index, index);\n      item.index = index;\n    }\n  });\n\n  dragRef(dropRef(ref));\n\n  return (\n    <div ref={ref} className={isDragging ? 'Arrastar tarefa' : 'Tarefa'}>\n      <div>{task.title}</div>\n      <span onClick={() => handleStatus(task)}>\n        {task.closed ? 'Fazer' : 'Finalizar'}\n      </span>\n    </div>\n  );\n}\n","import React, { memo, useState, useEffect } from 'react';\nimport produce from 'immer';\nimport TaskContext from './context';\nimport Tarefa from '../Tarefa';\nimport TipoTempo from '../../TipoTempo';\n\nimport './styles.css';\n\nconst ListaTarefa = ({ selectedTaskType }) => {\n  const [input, setInput] = useState('');\n  const taskStatus = [\n    { name: 'Todas', value: -1 },\n    { name: 'Fazendo', value: false },\n    { name: 'Finalizadas', value: true }\n  ];\n\n  const [tasks, setTasks] = useState(\n    JSON.parse(window.localStorage.getItem('pomodoro-react-tasks')) || []\n  );\n  const [selectedStatus, setSelectedStatus] = useState(taskStatus[0]);\n\n  useEffect(() => {\n    window.localStorage.setItem('pomodoro-react-tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  function move(from, to) {\n    setTasks(\n      produce(tasks, draft => {\n        const taskMoved = draft[from];\n        draft.splice(from, 1);\n        draft.splice(to, 0, taskMoved);\n      })\n    );\n  }\n\n  function handleStatus(task) {\n    console.log('task:', task);\n    setTasks(\n      produce(tasks, draft => {\n        const foundIndex = draft.findIndex(item => item.id === task.id);\n        draft[foundIndex].closed = !draft[foundIndex].closed;\n      })\n    );\n  }\n\n  function addTask() {\n    setTasks(\n      produce(tasks, draft => {\n        draft.push({ id: draft.length + 1, title: input, closed: false });\n      })\n    );\n    setInput('');\n  }\n\n  function clearTask() {\n    localStorage.removeItem(\"pomodoro-react-tasks\");\n    window.location.reload();\n  }\n\n  return (\n    <TaskContext.Provider value={{ tasks, move, handleStatus }}>\n      <TipoTempo\n        types={taskStatus}\n        selected={selectedStatus}\n        changeType={setSelectedStatus}\n      />\n      <div className=\"Tarefa\">\n        <input\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          placeholder=\"Inserir tarefa\"\n        />\n        <span onClick={addTask}>{'Criar'}</span><span onClick={clearTask}>{'Limpar'}</span>\n      </div>\n      <div className=\"Tarefas\">\n        <div className=\"Tarefas-box\">\n          {tasks.length > 0 ? (\n            tasks\n              .filter(\n                task =>\n                  task.closed === selectedStatus.value ||\n                  selectedStatus.value === -1\n              )\n              .map((task, index) => (\n                <Tarefa key={task.id} index={index} task={task} />\n              ))\n          ) : (\n            <div className=\"Tarefa\">Sem tarefas</div>\n          )}\n        </div>\n      </div>\n    </TaskContext.Provider>\n  );\n};\n\nexport default memo(ListaTarefa);\n","import React, { Component } from 'react';\nimport TipoTempo from '../components/TipoTempo';\nimport Cronometro from '../components/Cromometro';\nimport Controles from '../components/Controles';\nimport AtalhosTeclado from '../components/AtalhosTeclado';\nimport AvisoSonoro from '../components/AvisoSonoro';\nimport VerTarefas from '../components/Tarefas/VerTarefas';\nimport ListaTarefa from '../components/Tarefas/ListaTarefa';\nimport './Pomodoro.css';\n\nclass Pomodoro extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedType: props.types[0],\n      time: props.types[0].time,\n      interval: null,\n      running: false,\n      sound:\n        JSON.parse(window.localStorage.getItem('pomodoro-react-sound')) || true,\n      taskStatus:\n        JSON.parse(window.localStorage.getItem('pomodoro-react-taskStatus')) ||\n        null\n    };\n  }\n\n  static defaultProps = {\n    types: [\n      { id: 1, name: 'Pomodoro Sprint', time: 1500 },\n      { id: 2, name: 'Intervalo curto', time: 300 },\n      { id: 3, name: 'Intervalo longo', time: 900 }\n    ]\n  };\n\n  sprint = 0;\n  sprintTotal = 0;\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n    Notification.requestPermission();\n    this.sound = new Audio('bell.flac');\n    this.sound.preload = 'auto';\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = event => {\n    if (event.target.tagName === 'INPUT') return;\n    if (event.key === ' ') {\n      this.pauseTimer();\n    } else if (event.key === 'Escape') {\n      this.resetTimer();\n    } else if (event.key >= 1 && event.key <= this.props.types.length) {\n      this.changeType(this.props.types[event.key - 1]);\n    }\n  };\n\n  changeType = type => {\n    this.resetTimer();\n    this.setState({ selectedType: type, time: type.time, running: false });\n  };\n\n  tick = () => {\n    if (this.state.time <= 1) {\n      this.stopInterval();\n      this.setState({ running: false });\n\n      if (this.state.selectedType.name === \"Pomodoro Sprint\"){\n        this.changeType(this.props.types[1]);\n        this.sprint = this.sprint + 1;\n        this.sprintTotal = this.sprintTotal + 1;\n      } else {\n        if (this.state.selectedType.name === \"Intervalo curto\"){\n          this.changeType(this.props.types[0]);\n          this.sprint = this.sprint + 1;\n        } else {\n          if (this.state.selectedType.name === \"Intervalo longo\"){\n            this.changeType(this.props.types[0]);\n            this.sprint = 0;\n          }\n        }\n      }\n\n      if (this.sprint >= 7){\n        this.changeType(this.props.types[2]);\n        this.sprint = 0;\n      }\n\n      if (this.state.sound) this.sound.play();\n      try {\n        navigator.serviceWorker.register('service-worker.js').then(sw => {\n          sw.showNotification(`Front Data - Pomodoro Sprint - Fazer ${this.state.selectedType.name}`);\n        });\n      } catch (e) {\n        console.log('Erro de notificação', e);\n      }\n    }\n    this.setState(state => ({ time: state.time - 1 }));\n  };\n\n  stopInterval = () => {\n    clearInterval(this.state.interval);\n    this.setState({ interval: null });\n  };\n\n  startTimer = () => {\n    this.setState(state => ({\n      running: true,\n      interval: setInterval(this.tick, 1000),\n      time: state.time > 0 ? state.time : state.selectedType.time\n    }));\n    this.sound.pause();\n    this.sound.currentTime = 0;\n  };\n\n  resetTimer = () => {\n    this.stopInterval();\n    this.setState(state => ({\n      time: state.selectedType.time,\n      running: false\n    }));\n  };\n\n  pauseTimer = () => {\n    this.state.interval ? this.stopInterval() : this.startTimer();\n  };\n\n  getStatus = () => {\n    const { time, running, interval } = this.state;\n    if (time === 0) return 'Finalizado';\n    if (running && !interval) return 'Pausado';\n    if (running) return 'Tempo';\n  };\n\n  getProgress = () => {\n    const current = this.state.time;\n    const total = this.state.selectedType.time;\n    return ((total - current) / total) * 100;\n  };\n\n  handleToggleSound = () => {\n    this.setState(\n      state => ({\n        sound: !state.sound\n      }),\n      () => {\n        window.localStorage.setItem('pomodoro-react-sound', this.state.sound);\n      }\n    );\n  };\n\n  handleToggleTask = () => {\n    this.setState(\n      state => ({\n        taskStatus: !state.taskStatus\n      }),\n      () => {\n        window.localStorage.setItem(\n          'pomodoro-react-taskStatus',\n          this.state.taskStatus\n        );\n      }\n    );\n  };\n\n  render() {\n    const { time, selectedType, sound, taskStatus } = this.state;\n    const { types } = this.props;\n\n    return (\n      <div className=\"Conteudo\">\n        <div className=\"Pomodoro\">\n          <Cronometro\n            time={time}\n            status={this.getStatus()}\n            progress={this.getProgress()}\n          />\n          <p>Sprints: {this.sprintTotal}</p>\n          <Controles\n            start={this.startTimer}\n            reset={this.resetTimer}\n            pause={this.pauseTimer}\n            status={this.getStatus()}\n          />\n          <TipoTempo\n            types={types}\n            selected={selectedType}\n            changeType={this.changeType}\n          />\n          <VerTarefas tarefa={taskStatus} painelTarefa={this.handleToggleTask} />\n          <AtalhosTeclado />\n          <AvisoSonoro sound={sound} toggleSound={this.handleToggleSound} />\n        </div>\n        {taskStatus && (\n          <div className=\"PainelTarefa\">\n            <h1>Tarefas</h1>\n            <ListaTarefa />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Pomodoro;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\nimport Pomodoro from './main/Pomodoro';\n\nReactDOM.render(\n  <DndProvider backend={HTML5Backend}>\n    <Pomodoro />\n  </DndProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}